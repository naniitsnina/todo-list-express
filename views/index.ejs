<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="css/style.css">
</head>
<body> <!-- main section for content displayed -->

<!-- This may be a typo start-->
<!DOCTYPE html> 
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<!-- This may be a typo end -->
<body>
    <h1>Todo List: </h1> <!--main heading of the page  -->
    <ul class="todoItems"> <!--unordered list with a class  -->
    <% for(let i=0; i < items.length; i++) {%> <!-- Use EJS to start FOR loop  -->
        <li class="item"> <!--Create a list item with a class of Item  -->
            <% if(items[i].completed === true) {%> <!-- EJS to check if an item in an array with a complete property is true-->
                <span class='completed'><%= items[i].thing %></span> <!-- Creating an inline element with a class and adding EJS to display the name of the task-->
            <% }else{ %> <!--EJS for the else clause of our 'if' statment-->
                <span><%= items[i].thing %></span><!--Added EJS to display the name of the task without the class 'completed'-->
            <% } %> <!--EJS to close the else statement-->
            <span class='fa fa-trash'></span> <!--Display trash icon inside a span-->
        </li> <!--Closing of list item-->
    <% } %> <!--Closing ejs to close the for loop-->
    </ul> <!--closing unordered list-->

    <h2>Left to do: <%= left %></h2> <!--Creates a second level heading tag with text and using EJS to display a variable showing how many tasks are left to complete-->

    <h2>Add A Todo:</h2> <!--Create a second level header-->

    <form action="/addTodo" method="POST"><!--Create a form with a POST method that goes to the /addTodo route--> <!--Post mean Create, why do we care about the route? so the server knows what to do -->
        <input type="text" placeholder="Thing To Do" name="todoItem"> <!--create an input box that accepts text with default text inside of it before you type anything. The input box is given a name for later reference-->
        <input type="submit"> 
    </form>
    

    <script src='js/main.js'></script>
</body>
</html>
